/* soapStub.h
   Generated by gSOAP 2.8.1 from EpcTagDataTranslation.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_tdt	"urn:epcglobal:tdt:xsd:1"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_tdt__LevelTypeList
#define SOAP_TYPE_tdt__LevelTypeList (8)
/* tdt:LevelTypeList */
enum tdt__LevelTypeList {tdt__LevelTypeList__BINARY = 0, tdt__LevelTypeList__TAG_USCOREENCODING = 1, tdt__LevelTypeList__PURE_USCOREIDENTITY = 2, tdt__LevelTypeList__LEGACY = 3, tdt__LevelTypeList__LEGACY_USCOREALT = 4, tdt__LevelTypeList__LEGACY_USCOREAI = 5, tdt__LevelTypeList__ONS_USCOREHOSTNAME = 6};
#endif

#ifndef SOAP_TYPE_tdt__InputFormatList
#define SOAP_TYPE_tdt__InputFormatList (9)
/* tdt:InputFormatList */
enum tdt__InputFormatList {tdt__InputFormatList__BINARY = 0, tdt__InputFormatList__STRING = 1};
#endif

#ifndef SOAP_TYPE_tdt__ModeList
#define SOAP_TYPE_tdt__ModeList (10)
/* tdt:ModeList */
enum tdt__ModeList {tdt__ModeList__EXTRACT = 0, tdt__ModeList__FORMAT = 1};
#endif

#ifndef SOAP_TYPE_tdt__CompactionMethodList
#define SOAP_TYPE_tdt__CompactionMethodList (11)
/* tdt:CompactionMethodList */
enum tdt__CompactionMethodList {tdt__CompactionMethodList__32_bit = 0, tdt__CompactionMethodList__16_bit = 1, tdt__CompactionMethodList__8_bit = 2, tdt__CompactionMethodList__7_bit = 3, tdt__CompactionMethodList__6_bit = 4, tdt__CompactionMethodList__5_bit = 5};
#endif

#ifndef SOAP_TYPE_tdt__PadDirectionList
#define SOAP_TYPE_tdt__PadDirectionList (12)
/* tdt:PadDirectionList */
enum tdt__PadDirectionList {tdt__PadDirectionList__LEFT = 0, tdt__PadDirectionList__RIGHT = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_tdt__Field
#define SOAP_TYPE_tdt__Field (13)
/* tdt:Field */
struct tdt__Field
{
	char *seq;	/* required attribute of type xsd:integer */
	char *name;	/* required attribute of type xsd:string */
	char *bitLength;	/* optional attribute of type xsd:integer */
	char *characterSet;	/* required attribute of type xsd:string */
	enum tdt__CompactionMethodList *compaction;	/* optional attribute of type tdt:CompactionMethodList */
	char *compression;	/* optional attribute of type xsd:string */
	char *padChar;	/* optional attribute of type xsd:string */
	enum tdt__PadDirectionList *padDir;	/* optional attribute of type tdt:PadDirectionList */
	enum tdt__PadDirectionList *bitPadDir;	/* optional attribute of type tdt:PadDirectionList */
	char *decimalMinimum;	/* optional attribute of type xsd:string */
	char *decimalMaximum;	/* optional attribute of type xsd:string */
	char *length;	/* optional attribute of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_tdt__Option
#define SOAP_TYPE_tdt__Option (16)
/* tdt:Option */
struct tdt__Option
{
	int __sizefield;	/* sequence of elements <field> */
	struct tdt__Field *field;	/* required element of type tdt:Field */
	char *optionKey;	/* required attribute of type xsd:string */
	char *pattern;	/* optional attribute of type xsd:string */
	char *grammar;	/* required attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_tdt__Rule
#define SOAP_TYPE_tdt__Rule (18)
/* tdt:Rule */
struct tdt__Rule
{
	enum tdt__ModeList type;	/* required attribute of type tdt:ModeList */
	enum tdt__InputFormatList inputFormat;	/* required attribute of type tdt:InputFormatList */
	char *seq;	/* required attribute of type xsd:integer */
	char *newFieldName;	/* required attribute of type xsd:string */
	char *characterSet;	/* required attribute of type xsd:string */
	char *padChar;	/* optional attribute of type xsd:string */
	enum tdt__PadDirectionList *padDir;	/* optional attribute of type tdt:PadDirectionList */
	enum tdt__PadDirectionList *bitPadDir;	/* optional attribute of type tdt:PadDirectionList */
	char *decimalMinimum;	/* optional attribute of type xsd:string */
	char *decimalMaximum;	/* optional attribute of type xsd:string */
	char *length;	/* optional attribute of type xsd:string */
	char *function;	/* required attribute of type xsd:string */
	char *tableURL;	/* optional attribute of type xsd:string */
	char *tableParams;	/* optional attribute of type xsd:string */
	char *tableXPath;	/* optional attribute of type xsd:string */
	char *tableSQL;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_tdt__Level
#define SOAP_TYPE_tdt__Level (19)
/* tdt:Level */
struct tdt__Level
{
	int __sizeoption;	/* sequence of elements <option> */
	struct tdt__Option *option;	/* required element of type tdt:Option */
	int __sizerule;	/* sequence of elements <rule> */
	struct tdt__Rule *rule;	/* optional element of type tdt:Rule */
	enum tdt__LevelTypeList type;	/* required attribute of type tdt:LevelTypeList */
	char *prefixMatch;	/* optional attribute of type xsd:string */
	char *requiredParsingParameters;	/* optional attribute of type xsd:string */
	char *requiredFormattingParameters;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_tdt__Scheme
#define SOAP_TYPE_tdt__Scheme (22)
/* tdt:Scheme */
struct tdt__Scheme
{
	int __sizelevel;	/* sequence of elements <level> */
	struct tdt__Level *level;	/* required element of type tdt:Level */
	char *name;	/* required attribute of type xsd:string */
	char *optionKey;	/* required attribute of type xsd:string */
	char *tagLength;	/* required attribute of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_tdt__EpcTagDataTranslation
#define SOAP_TYPE_tdt__EpcTagDataTranslation (24)
/* tdt:EpcTagDataTranslation */
struct tdt__EpcTagDataTranslation
{
	int __sizescheme;	/* sequence of elements <scheme> */
	struct tdt__Scheme *scheme;	/* required element of type tdt:Scheme */
	char *version;	/* required attribute of type xsd:string */
	time_t date;	/* required attribute of type xsd:dateTime */
	char *epcTDSVersion;	/* required attribute of type xsd:string */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (27)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (28)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (30)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (33)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (34)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (7)
typedef char *xsd__integer;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
